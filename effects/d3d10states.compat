//
// D3D10 state includes
//

// General defines

#define technique technique10
#define DIRECT3D10 1

// shader 4.0 mapping
#define vs_1_1 vs_4_0
#define vs_1_3 vs_4_0
#define vs_1_4 vs_4_0
#define vs_2_0 vs_4_0
#define vs_3_0 vs_4_0
#define ps_1_1 ps_4_0
#define ps_1_3 ps_4_0
#define ps_1_4 ps_4_0
#define ps_2_0 ps_4_0
#define ps_2_a ps_4_0
#define ps_2_b ps_4_0
#define ps_3_0 ps_4_0

// workarounds for backwords compatbility issues in new d3d10 compiler
#define MipFilter Filter
#define MinFilter Filter
#define MagFilter Filter
#define NONE MIN_MAG_MIP_POINT
#define LINEAR MIN_MAG_MIP_LINEAR
#define POINT MIN_MAG_MIP_POINT

#define FIXED_FUNC_VS compile vs_4_0 FixedFuncVS()
#define FIXED_FUNC_BLOOM_VS compile vs_4_0 FixedFuncBloomVS()
#define FIXED_FUNC_PS compile ps_4_0 FixedFuncPS()

// state
#define AlphaState(p) SetBlendState( p, float4(0,0,0,0), 0xFFFFFFFF );
#define DepthState(p) SetDepthStencilState( p, 0x03 );
#define RasterizerState(p) SetRasterizerState( p );

// decals
#define decalDepthOffset (-0.00001)

// alpha test workaround for D3D10
#define d3d_LessEqual 0
#define d3d_NotEqual 1
#define d3d_Equal 2
#define d3d_Greater 3

// engine was not written for D3D10
#define CompatSwizzle(c) c.rgba = c.bgra

void AlphaTestD3D10( float inputAlpha, int alphaFunc, int alphaRef )
{
	if( alphaFunc == d3d_LessEqual )
	{
		if( inputAlpha > alphaRef/255.0 )
			discard; 
	}
	else if( alphaFunc == d3d_NotEqual )
	{
		if( inputAlpha == alphaRef/255.0 )
			discard;
	}
	else if( alphaFunc == d3d_Equal )
	{
		if( inputAlpha != alphaRef/255.0 )
			discard;
	}
	else if( alphaFunc == d3d_Greater )
	{
		if( inputAlpha <= alphaRef/255.0 )
			discard;
	}
}

//
// Blend States
//
BlendState AlphaBlend_Disable
{
	BlendEnable[0] = false;	
	
    RenderTargetWriteMask[0] = 0x0F;
	SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Default_Write_RGB
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x07;
    
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Default_Write_A
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x08;
    
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_InvSrcAlpha_Write_RGBA
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x0F;
    SrcBlend = SRC_ALPHA;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_One_Write_RGBA
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x0F;
    SrcBlend = SRC_ALPHA;
    DestBlend = ONE;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_One_Write_RGB
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x07;
    SrcBlend = SRC_ALPHA;
    DestBlend = ONE;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_One
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x07;
    SrcBlend = SRC_ALPHA;
    DestBlend = ONE;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_InvSrcAlpha_Write_RGB
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x07;
    SrcBlend = SRC_ALPHA;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_InvSrcAlpha_Write_RG
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x03;
    SrcBlend = SRC_ALPHA;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_InvSrcAlpha_Write_RBA
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x0D;
    SrcBlend = SRC_ALPHA;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_InvSrcAlpha_Write_RGB
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x07;
    SrcBlend = ONE;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_InvSrcAlpha_Write_RGBA
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x0F;
    SrcBlend = ONE;
    DestBlend = INV_SRC_ALPHA;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_InvSrcAlpha
{
    BlendEnable[0] = true;	
    SrcBlend = ONE;
    DestBlend = INV_SRC_ALPHA;
    
    RenderTargetWriteMask[0] = 0x0F;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Zero_InvSrcColor
{
    BlendEnable[0] = true;	
    SrcBlend = ZERO;
    DestBlend = INV_SRC_COLOR;
    
    RenderTargetWriteMask[0] = 0x07;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Zero_InvSrcColor_Write_RGBA
{
    BlendEnable[0] = true;	
    SrcBlend = ZERO;
    DestBlend = INV_SRC_COLOR;
    
    RenderTargetWriteMask[0] = 0x0F;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Zero_SrcColor_Write_RGB
{
    BlendEnable[0] = true;	
    SrcBlend = ZERO;
    DestBlend = SRC_COLOR;
    RenderTargetWriteMask[0] = 0x07;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_SrcAlpha_InvSrcAlpha_Write_A
{
    BlendEnable[0] = true;	
    RenderTargetWriteMask[0] = 0x08;
    SrcBlend = SRC_ALPHA;
    DestBlend = INV_SRC_ALPHA;

	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_InvDestColor_InvSrcColor
{
    BlendEnable[0] = true;	
    SrcBlend = INV_DEST_COLOR;
    DestBlend = INV_SRC_COLOR;
    
    RenderTargetWriteMask[0] = 0x07;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_InvDestColor_InvSrcColor_Write_RGBA
{
    BlendEnable[0] = true;	
    SrcBlend = INV_DEST_COLOR;
    DestBlend = INV_SRC_COLOR;
    
    RenderTargetWriteMask[0] = 0x0F;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_Zero
{
    BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ZERO;
    
    RenderTargetWriteMask[0] = 0x0F;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_One
{
    RenderTargetWriteMask[0] = 0x07;
    
    BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ONE;
	BlendOp = ADD;
    
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_One_Write_RGB
{
    BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ONE;
    RenderTargetWriteMask[0] = 0x07;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_One_Write_RGBA
{
    BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ONE;
    RenderTargetWriteMask[0] = 0x0F;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_One_Write_A
{
    BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ONE;
    RenderTargetWriteMask[0] = 0x08;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_One_Zero_Write_A
{
	BlendEnable[0] = true;
	SrcBlend = ONE;
    DestBlend = ZERO;
    RenderTargetWriteMask[0] = 0x08;
    
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Write_A
{
    RenderTargetWriteMask[0] = 0x08;
	BlendEnable[0] = true;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Write_RGB
{
    RenderTargetWriteMask[0] = 0x07;
	BlendEnable[0] = true;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Write_RGBA
{
    RenderTargetWriteMask[0] = 0x0F;
	BlendEnable[0] = true;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_A
{
    RenderTargetWriteMask[0] = 0x08;
	BlendEnable[0] = false;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_RG
{
    RenderTargetWriteMask[0] = 0x03;
	BlendEnable[0] = false;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_BA
{
    RenderTargetWriteMask[0] = 0x0C;
	BlendEnable[0] = false;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_RGB
{
    RenderTargetWriteMask[0] = 0x07;
	BlendEnable[0] = false;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_RGBA
{
    RenderTargetWriteMask[0] = 0x0F;
	BlendEnable[0] = false;
		   
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

BlendState AlphaBlend_Disable_Write_None
{
    RenderTargetWriteMask[0] = 0x00;
	BlendEnable[0] = false;	   
	
    SrcBlend = ONE;
	DestBlend = ZERO;
	BlendOp = ADD;
	SrcBlendAlpha = ONE;
	DestBlendAlpha = ZERO;
	BlendOpAlpha = ADD;
};

//
// DepthStencilStates
//

DepthStencilState Depth_Disable
{
	DepthEnable = FALSE;
	
	DepthWriteMask = ALL;
	DepthFunc = LESS_EQUAL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable
{
	DepthEnable = TRUE;
	
	DepthWriteMask = ALL;
	DepthFunc = LESS_EQUAL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Always
{
	DepthFunc = ALWAYS;
	
	DepthEnable = TRUE;
	DepthWriteMask = ALL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_Greater
{
	DepthEnable = TRUE;
	DepthFunc = GREATER;
	
	DepthWriteMask = ALL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_Less
{
	DepthEnable = TRUE;
	DepthFunc = LESS;
	
	DepthWriteMask = ALL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_Greater_Write_None
{
	DepthEnable = TRUE;
	DepthWriteMask = 0;
	DepthFunc = GREATER;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_Less_Write_None
{
	DepthEnable = TRUE;
	DepthWriteMask = 0;
	DepthFunc = LESS;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_LessEqual_Write_None
{
	DepthEnable = TRUE;
	DepthWriteMask = 0;
	DepthFunc = LESS_EQUAL;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Enable_Always_Write_None
{
	DepthEnable = TRUE;
	DepthWriteMask = 0;
	DepthFunc = ALWAYS;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Disable_Write_None
{
	DepthEnable = FALSE;
	DepthWriteMask = 0;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0;
	StencilWriteMask = 0;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = ALWAYS;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_Occlude
{
	StencilEnable = TRUE;
	StencilReadMask = 0x01;
	StencilWriteMask = 0x01;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = REPLACE;
	FrontFaceStencilFunc = ALWAYS;
	
	DepthEnable = TRUE;
	DepthWriteMask = ALL;
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
};

DepthStencilState Depth_SilhouetteP0
{
	DepthEnable = FALSE;
	DepthWriteMask = 0;
	StencilEnable = TRUE;
	StencilReadMask = 0x02;
	StencilWriteMask = 0x02;
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = REPLACE;
	FrontFaceStencilPass = REPLACE;
	FrontFaceStencilFunc = ALWAYS;
	
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
};

DepthStencilState Depth_SilhouetteP1
{
	DepthEnable = TRUE;
	DepthWriteMask = 0;
	StencilEnable = TRUE;
	StencilReadMask = 0x03;
	StencilWriteMask = 0x0F;
	// TODO: work out how to do stencil ref (0x03)
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = ZERO;
	FrontFaceStencilFunc = EQUAL;
	
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
};

DepthStencilState Depth_TSilhouette
{
	DepthEnable = FALSE;
	DepthWriteMask = 0;
	StencilEnable = TRUE;
	StencilReadMask = 0xFF;
	StencilWriteMask = 0xFF;
	// TODO: work out how to do stencil ref (0x03)
	FrontFaceStencilFail = KEEP;
	FrontFaceStencilDepthFail = KEEP;
	FrontFaceStencilPass = KEEP;
	FrontFaceStencilFunc = EQUAL;
	
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
};

DepthStencilState Depth_TCommand
{
	DepthEnable = FALSE;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0x0F;
	StencilWriteMask = 0x0F;
	// TODO: work out how to do stencil ref (0x01)
	FrontFaceStencilFail = REPLACE;
	FrontFaceStencilPass = REPLACE;
	FrontFaceStencilFunc = NOT_EQUAL;
	
	FrontFaceStencilDepthFail = KEEP;
	DepthWriteMask = ALL;
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

DepthStencilState Depth_TCommandOther
{
	DepthEnable = FALSE;

	StencilEnable = FALSE;
#if 0
	StencilReadMask = 0x0;
	StencilWriteMask = 0x0;
	// TODO: work out how to do stencil ref (0x02)
	FrontFaceStencilFail = REPLACE;
	FrontFaceStencilPass = REPLACE;
	FrontFaceStencilFunc = NOT_EQUAL;
	
	FrontFaceStencilDepthFail = KEEP;
	DepthWriteMask = ALL;
	DepthFunc = LESS_EQUAL;
	BackFaceStencilFail = KEEP;
	BackFaceStencilDepthFail = KEEP;
	BackFaceStencilPass = KEEP;
	BackFaceStencilFunc = ALWAYS;
#endif
};

//
// RasterizerStates
//

RasterizerState Rasterizer_Cull_CCW
{
	FillMode = SOLID;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CCW_Bias_Neg02
{
	FillMode = SOLID;
	CullMode = None;
	FrontCounterClockwise = FALSE;
	DepthBias = -0.02;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CCW_Bias_Neg001
{
	FillMode = SOLID;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = -0.001;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_None_Bias_Neg001
{
	FillMode = SOLID;
	CullMode = None;
	FrontCounterClockwise = FALSE;
	// shanond: Why is this necessary?
	DepthBias = -10000;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Bias_Decal
{
	FillMode = SOLID;
	CullMode = None;
	FrontCounterClockwise = FALSE;
	DepthBias = decalDepthOffset;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CW
{
	FillMode = SOLID;
	CullMode = FRONT;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_None
{
	FillMode = SOLID;
	CullMode = None;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Wire
{
	FillMode = WIREFRAME;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Solid
{
	FillMode = SOLID;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CCW_Fill_Wire
{
	FillMode = WIREFRAME;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CCW_Bias_Neg02_Fill_Wire
{
	FillMode = WIREFRAME;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = -0.02;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Bias_Decal_Fill_Wire
{
	FillMode = WIREFRAME;
	CullMode = BACK;
	FrontCounterClockwise = FALSE;
	DepthBias = decalDepthOffset;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_CW_Fill_Wire
{
	FillMode = WIREFRAME;
	CullMode = FRONT;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

RasterizerState Rasterizer_Cull_None_Fill_Wire
{
	FillMode = WIREFRAME;
	CullMode = None;
	FrontCounterClockwise = FALSE;
	DepthBias = 0;
	DepthBiasClamp = 0;
	SlopeScaledDepthBias = 0;
	DepthClipEnable = FALSE;
	ScissorEnable = FALSE;
	MultisampleEnable = TRUE;
	AntialiasedLineEnable = FALSE;
};

//
// End
//

