name: Test

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - deploy/fafdevelop
      - deploy/faf
      - deploy/fafbeta
      - develop
      - master

jobs:
  syntax:
    name: Syntax
    runs-on: ubuntu-latest
    container: faforever/lua:v5.0-1
    steps:
      - name: Install tooling
        run: apk add bash git findutils
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            # include all shell scripts used for testing
            *.sh

            # include all Lua files that we ship
            env/**/*.lua
            meshes/**/*.lua
            projectiles/**/*.lua
            schook/**/*.lua
            effects/**/*.lua
            units/**/*.lua
            loc/**/*.lua
            etc/**/*.lua
            lua/**/*.lua
            textures/**/*.lua

            # include all init files
            init_faf.lua
            init_fafdevelop.lua
            init_fafbeta.lua
            init_shared.lua
            init.lua
            init_local_development.lua
            mod_info.lua
            SupComDataPath.lua

            # Include all blueprint files that we ship
            env/**/*.bp
            meshes/**/*.bp
            projectiles/**/*.bp
            schook/**/*.bp
            units/**/*.bp
            effects/**/*.bp
      - name: Check Lua syntax
        run: | 
          bash ./tests/run-syntax-test.sh

  testUtils:
    name: Utility tests
    needs: [syntax]
    runs-on: ubuntu-latest
    container: faforever/lua:v5.0-1
    steps:
      - name: Install tooling
        run: apk add bash git findutils
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            *.sh
            *.lua
            *.bp
      - name: Run Lua tests
        run: "bash ./tests/run-utility-tests.sh"
  testUnits:
    name: Blueprint tests
    needs: [syntax]
    runs-on: ubuntu-latest
    container: faforever/lua:v5.0-1
    steps:
      - name: Install tooling
        run: apk add bash git findutils
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            *.sh
            *.lua
            *.bp
      - name: Run Lua tests
        run: "bash ./tests/run-blueprint-tests.sh"
