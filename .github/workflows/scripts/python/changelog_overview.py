"""
This script generates an overview Lua file listing all changelogs with metadata.

The script processes a directory of markdown files, extracting metadata from the file names and
YAML front matter to create an overview file listing all converted changelogs with their version,
name, date, URL, and path.
"""

import yaml
from pathlib import Path

MAX_LINE_LENGTH = 150

HEADER_SEPARATOR = "--" * (MAX_LINE_LENGTH // len("--"))
HEADER_LINE_CENTER = MAX_LINE_LENGTH - 2 * len("--")
SCRIPT_NAME = Path(__file__).name

OVERVIEW_HEADER = f"""{HEADER_SEPARATOR}
--{f'This file was autogenerated using {SCRIPT_NAME}':^{HEADER_LINE_CENTER}}--
{HEADER_SEPARATOR}
"""


def extract_yaml_front_matter(content: str) -> (str, str):
    """Extracts YAML front matter from markdown content."""
    if content.startswith('---'):
        end = content.find('---', 3)
        if end != -1:
            yaml_content = content[3:end].strip()
            rest_of_content = content[end+3:].strip()
            return yaml_content, rest_of_content
    return '', content


def create_overview_file(input_dir: Path, output_file: Path):
    """Creates an overview Lua file listing all changelogs with metadata."""
    overview_entries = []
    for markdown_file in input_dir.glob("*.md"):
        # Extract date from the file name if it matches the expected format
        file_name_parts = markdown_file.stem.split('-')
        if len(file_name_parts) != 4:
            continue

        date = '-'.join(file_name_parts[:3])
        version = file_name_parts[3]

        yaml_content, _ = extract_yaml_front_matter(markdown_file.read_text())
        yaml_data = yaml.safe_load(yaml_content) if yaml_content else {}

        name = yaml_data.get('name', 'Unknown')

        entry = {
            'Version': version,
            'Name': name,
            'Date': date,
            'URL': f"http://faforever.github.io/fa/{version}",
            'Path': f"/lua/ui/lobby/changelog/generated/{markdown_file.stem}.lua"
        }
        overview_entries.append(entry)

    overview_content = OVERVIEW_HEADER + """
---@type UIChangelogOverview
Overview = {
    Changelogs = {
"""
    for entry in overview_entries:
        overview_content += "        {\n"
        overview_content += f"            Version = {entry['Version']},\n"
        overview_content += f"            Name = \"{entry['Name']}\",\n"
        overview_content += f"            Date = \"{entry['Date']}\",\n"
        overview_content += f"            URL = \"{entry['URL']}\",\n"
        overview_content += f"            Path = \"{entry['Path']}\"\n"
        overview_content += "        },\n"
    overview_content += "    }\n}\n"

    output_file.write_text(overview_content)


def main():
    import argparse

    parser = argparse.ArgumentParser(description="Generate an overview Lua file for changelogs.")
    parser.add_argument("input_dir", type=Path, help="Directory containing markdown files")
    parser.add_argument("output_file", type=Path, help="Output Lua file path")
    args = parser.parse_args()

    create_overview_file(args.input_dir, args.output_file)


if __name__ == "__main__":
    main()
