{
    "Above": {
        "body": [
            "LayoutHelpers.Above(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "Above"
        ],
        "description": "* lock bottom left of control to top left of parent"
    },
    "SetPixelScaleFactor": {
        "body": [
            "LayoutHelpers.SetPixelScaleFactor(${1:newFactor})"
        ],
        "prefix": [
            "SetPixelScaleFactor"
        ],
        "description": ""
    },
    "PercentIn": {
        "body": [
            "LayoutHelpers.PercentIn(${1:control}, ${2:parent}, ${3:left}, ${4:top}, ${5:right}, ${6:bottom})"
        ],
        "prefix": [
            "PercentIn"
        ],
        "description": "* these functions will place the control and resize in a specified location within the parent\r\n* note that the offset version is more useful than hard coding the location\r\n* as it will take advantage of the pixel scale factor"
    },
    "DimensionsRelativeTo": {
        "body": [
            "LayoutHelpers.DimensionsRelativeTo(${1:control}, ${2:fileName}, ${3:controlName})"
        ],
        "prefix": [
            "DimensionsRelativeTo"
        ],
        "description": ""
    },
    "FillParentFixedBorder": {
        "body": [
            "LayoutHelpers.FillParentFixedBorder(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "FillParentFixedBorder"
        ],
        "description": ""
    },
    "FromRightIn": {
        "body": [
            "LayoutHelpers.FromRightIn(${1:control}, ${2:parent}, ${3:percent})"
        ],
        "prefix": [
            "FromRightIn"
        ],
        "description": ""
    },
    "RightOf": {
        "body": [
            "LayoutHelpers.RightOf(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "RightOf"
        ],
        "description": "* lock left top of control to right top of parent"
    },
    "DepthUnderParent": {
        "body": [
            "LayoutHelpers.DepthUnderParent(${1:control}, ${2:parent}, ${3:depth})"
        ],
        "prefix": [
            "DepthUnderParent"
        ],
        "description": ""
    },
    "SetDimensions": {
        "body": [
            "LayoutHelpers.SetDimensions(${1:control}, ${2:width}, ${3:height})"
        ],
        "prefix": [
            "SetDimensions"
        ],
        "description": "* set the dimensions"
    },
    "AtTopIn": {
        "body": [
            "LayoutHelpers.AtTopIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtTopIn"
        ],
        "description": ""
    },
    "AnchorToTop": {
        "body": [
            "LayoutHelpers.AnchorToTop(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AnchorToTop"
        ],
        "description": "anchor functions lock the appropriate side of a control to the side of another control\r\nlock top of control to parent bottom"
    },
    "AnchorToLeft": {
        "body": [
            "LayoutHelpers.AnchorToLeft(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AnchorToLeft"
        ],
        "description": "lock right of control to parent left"
    },
    "FromBottomIn": {
        "body": [
            "LayoutHelpers.FromBottomIn(${1:control}, ${2:parent}, ${3:percent})"
        ],
        "prefix": [
            "FromBottomIn"
        ],
        "description": ""
    },
    "ResetLeft": {
        "body": [
            "LayoutHelpers.ResetLeft(${1:control})"
        ],
        "prefix": [
            "ResetLeft"
        ],
        "description": ""
    },
    "ScaleNumber": {
        "body": [
            "LayoutHelpers.ScaleNumber(${1:number})"
        ],
        "prefix": [
            "ScaleNumber"
        ],
        "description": ""
    },
    "AtVerticalCenterIn": {
        "body": [
            "LayoutHelpers.AtVerticalCenterIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtVerticalCenterIn"
        ],
        "description": ""
    },
    "Below": {
        "body": [
            "LayoutHelpers.Below(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "Below"
        ],
        "description": "* lock top left of control to bottom left of parent"
    },
    "ResetRight": {
        "body": [
            "LayoutHelpers.ResetRight(${1:control})"
        ],
        "prefix": [
            "ResetRight"
        ],
        "description": ""
    },
    "SetHeight": {
        "body": [
            "LayoutHelpers.SetHeight(${1:control}, ${2:height})"
        ],
        "prefix": [
            "SetHeight"
        ],
        "description": ""
    },
    "AtBottomIn": {
        "body": [
            "LayoutHelpers.AtBottomIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtBottomIn"
        ],
        "description": ""
    },
    "CenteredAbove": {
        "body": [
            "LayoutHelpers.CenteredAbove(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "CenteredAbove"
        ],
        "description": "* lock bottom left of control to top left of parent, centered horizontally to the parent"
    },
    "ResetBottom": {
        "body": [
            "LayoutHelpers.ResetBottom(${1:control})"
        ],
        "prefix": [
            "ResetBottom"
        ],
        "description": ""
    },
    "AtRightIn": {
        "body": [
            "LayoutHelpers.AtRightIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtRightIn"
        ],
        "description": ""
    },
    "FromTopIn": {
        "body": [
            "LayoutHelpers.FromTopIn(${1:control}, ${2:parent}, ${3:percent})"
        ],
        "prefix": [
            "FromTopIn"
        ],
        "description": ""
    },
    "InvScaleNumber": {
        "body": [
            "LayoutHelpers.InvScaleNumber(${1:number})"
        ],
        "prefix": [
            "InvScaleNumber"
        ],
        "description": ""
    },
    "AnchorToRight": {
        "body": [
            "LayoutHelpers.AnchorToRight(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AnchorToRight"
        ],
        "description": "lock left of control to parent right"
    },
    "LeftOf": {
        "body": [
            "LayoutHelpers.LeftOf(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "LeftOf"
        ],
        "description": "* these functions will set the controls position relative to a sibling\r\n* lock right top of control to left top of parent"
    },
    "FromLeftIn": {
        "body": [
            "LayoutHelpers.FromLeftIn(${1:control}, ${2:parent}, ${3:percent})"
        ],
        "prefix": [
            "FromLeftIn"
        ],
        "description": "* these functions use percentages to place the item rather than offsets so they will\r\n* stay proportially spaced when the parent resizes"
    },
    "ResetHeight": {
        "body": [
            "LayoutHelpers.ResetHeight(${1:control})"
        ],
        "prefix": [
            "ResetHeight"
        ],
        "description": ""
    },
    "AtHorizontalCenterIn": {
        "body": [
            "LayoutHelpers.AtHorizontalCenterIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtHorizontalCenterIn"
        ],
        "description": ""
    },
    "RightRelativeTo": {
        "body": [
            "LayoutHelpers.RightRelativeTo(${1:control}, ${2:parent}, ${3:fileName}, ${4:controlName}, ${5:parentName})"
        ],
        "prefix": [
            "RightRelativeTo"
        ],
        "description": ""
    },
    "DepthOverParent": {
        "body": [
            "LayoutHelpers.DepthOverParent(${1:control}, ${2:parent}, ${3:depth})"
        ],
        "prefix": [
            "DepthOverParent"
        ],
        "description": "* set the depth relative to the parent"
    },
    "GetRatio": {
        "body": [
            "LayoutHelpers.GetRatio(${1:control}, ${2:parent})"
        ],
        "prefix": [
            "GetRatio"
        ],
        "description": ""
    },
    "RelativeTo": {
        "body": [
            "LayoutHelpers.RelativeTo(${1:control}, ${2:parent}, ${3:fileName}, ${4:controlName}, ${5:parentName}, ${6:topOffset}, ${7:leftOffset})"
        ],
        "prefix": [
            "RelativeTo"
        ],
        "description": ""
    },
    "SetWidth": {
        "body": [
            "LayoutHelpers.SetWidth(${1:control}, ${2:width})"
        ],
        "prefix": [
            "SetWidth"
        ],
        "description": ""
    },
    "LeftRelativeTo": {
        "body": [
            "LayoutHelpers.LeftRelativeTo(${1:control}, ${2:parent}, ${3:fileName}, ${4:controlName}, ${5:parentName})"
        ],
        "prefix": [
            "LeftRelativeTo"
        ],
        "description": ""
    },
    "TopRelativeTo": {
        "body": [
            "LayoutHelpers.TopRelativeTo(${1:control}, ${2:parent}, ${3:fileName}, ${4:controlName}, ${5:parentName})"
        ],
        "prefix": [
            "TopRelativeTo"
        ],
        "description": ""
    },
    "AtCenterIn": {
        "body": [
            "LayoutHelpers.AtCenterIn(${1:control}, ${2:parent}, ${3:vertOffset}, ${4:horzOffset})"
        ],
        "prefix": [
            "AtCenterIn"
        ],
        "description": "* These functions will set the controls position to be placed relative to\r\n* its parents dimensions. They are generally most useful for elements that\r\n* don't change size, they can also be used for controls that stretch\r\n* to match parent."
    },
    "AtLeftIn": {
        "body": [
            "LayoutHelpers.AtLeftIn(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AtLeftIn"
        ],
        "description": ""
    },
    "CenteredBelow": {
        "body": [
            "LayoutHelpers.CenteredBelow(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "CenteredBelow"
        ],
        "description": "* lock top left of control to bottom left of parent, centered horizontally to the parent"
    },
    "AtRightTopIn": {
        "body": [
            "LayoutHelpers.AtRightTopIn(${1:control}, ${2:parent}, ${3:rightOffset}, ${4:topOffset})"
        ],
        "prefix": [
            "AtRightTopIn"
        ],
        "description": ""
    },
    "ResetTop": {
        "body": [
            "LayoutHelpers.ResetTop(${1:control})"
        ],
        "prefix": [
            "ResetTop"
        ],
        "description": ""
    },
    "AtLeftBottomIn": {
        "body": [
            "LayoutHelpers.AtLeftBottomIn(${1:control}, ${2:parent}, ${3:leftOffset}, ${4:bottomOffset})"
        ],
        "prefix": [
            "AtLeftBottomIn"
        ],
        "description": ""
    },
    "GetPixelScaleFactor": {
        "body": [
            "LayoutHelpers.GetPixelScaleFactor()"
        ],
        "prefix": [
            "GetPixelScaleFactor"
        ],
        "description": ""
    },
    "FillParent": {
        "body": [
            "LayoutHelpers.FillParent(${1:control}, ${2:parent})"
        ],
        "prefix": [
            "FillParent"
        ],
        "description": "* these functions will stretch the control to fill the parent and provide an optional border"
    },
    "CenteredRightOf": {
        "body": [
            "LayoutHelpers.CenteredRightOf(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "CenteredRightOf"
        ],
        "description": "* lock left top of control to right of parent, centered vertically to the parent"
    },
    "FillParentRelativeBorder": {
        "body": [
            "LayoutHelpers.FillParentRelativeBorder(${1:control}, ${2:parent}, ${3:percent})"
        ],
        "prefix": [
            "FillParentRelativeBorder"
        ],
        "description": ""
    },
    "ResetWidth": {
        "body": [
            "LayoutHelpers.ResetWidth(${1:control})"
        ],
        "prefix": [
            "ResetWidth"
        ],
        "description": ""
    },
    "BottomRelativeTo": {
        "body": [
            "LayoutHelpers.BottomRelativeTo(${1:control}, ${2:parent}, ${3:fileName}, ${4:controlName}, ${5:parentName})"
        ],
        "prefix": [
            "BottomRelativeTo"
        ],
        "description": ""
    },
    "Scale": {
        "body": [
            "LayoutHelpers.Scale(${1:control})"
        ],
        "prefix": [
            "Scale"
        ],
        "description": "Scale according to the globally set ratio"
    },
    "CenteredLeftOf": {
        "body": [
            "LayoutHelpers.CenteredLeftOf(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "CenteredLeftOf"
        ],
        "description": "* lock right top of control to left of parent, cenetered vertically to the parent"
    },
    "AnchorToBottom": {
        "body": [
            "LayoutHelpers.AnchorToBottom(${1:control}, ${2:parent}, ${3:offset})"
        ],
        "prefix": [
            "AnchorToBottom"
        ],
        "description": "lock bottom of control parent top"
    },
    "AtRightBottomIn": {
        "body": [
            "LayoutHelpers.AtRightBottomIn(${1:control}, ${2:parent}, ${3:rightOffset}, ${4:bottomOffset})"
        ],
        "prefix": [
            "AtRightBottomIn"
        ],
        "description": ""
    },
    "Reset": {
        "body": [
            "LayoutHelpers.Reset(${1:control})"
        ],
        "prefix": [
            "Reset"
        ],
        "description": "* Reset to the default layout functions"
    },
    "OffsetIn": {
        "body": [
            "LayoutHelpers.OffsetIn(${1:control}, ${2:parent}, ${3:left}, ${4:top}, ${5:right}, ${6:bottom})"
        ],
        "prefix": [
            "OffsetIn"
        ],
        "description": ""
    },
    "AtLeftTopIn": {
        "body": [
            "LayoutHelpers.AtLeftTopIn(${1:control}, ${2:parent}, ${3:leftOffset}, ${4:topOffset})"
        ],
        "prefix": [
            "AtLeftTopIn"
        ],
        "description": ""
    },
    "FillParentPreserveAspectRatio": {
        "body": [
            "LayoutHelpers.FillParentPreserveAspectRatio(${1:control}, ${2:parent})"
        ],
        "prefix": [
            "FillParentPreserveAspectRatio"
        ],
        "description": "Fill the parent control while preserving the aspect ratio of the item"
    }
}